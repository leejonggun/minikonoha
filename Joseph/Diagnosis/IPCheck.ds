// written by Joseph

import("dshell");
import("konoha.json");
import("cstyle");

const DCaseContext = Json;

String host = "";

boolean check_host_or_address(String[] given_host) {
	int i = 0 , j = 0;
	String tmpIP = given_host.get(0);
	String[] check_list = {"www", "com", "co", "org", "jp"};

	if (tmpIP.toint() == 0) {//if tmpIP is string, not number. String.toint() return 0.
		while (i < given_host.getlength()) {
			tmpIP = given_host.get(i);
			j = 0;
			while (j < check_list.getlength()) {
				if (tmpIP == check_list.get(j)) {
					System.p("Hostname");
					return true;
				}
				j = j + 1;
			}
			i = i + 1;
		}
		return false;
	} else {
		String str = $(ip route show | grep "default");
		String[] gateway = str.substring(str.search("192"), str.search("dev")).split(".");
		while (i < gateway.getlength() - 1) {
			tmpIP = given_host.get(i);
			if (tmpIP != gateway.get(i)) {
				System.p("given IP Address is out of LAN.");
				return false;
			}
			i = i + 1;
		}
		System.p("given IP Address is in a LAN.");
		return true;
	}
}

boolean IPCheck(DCaseContext ctx) {
	boolean ret = true;
	host = ctx.getString("hostname");

//check the given is IP Address or Hostname.
	String[] given = host.split(".");
	ret = check_host_or_address(given);
	return ret;
}

void main() {
	DCaseContext ctx = new DCaseContext();
	ctx.setString("hostname", SCRIPT_ARGV.get(1));
	System.p(IPCheck(ctx));
}

main();
